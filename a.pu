@startuml 図書館システム-図書予約シーケンス図（DB詳細版）
hide footbox
skinparam boundaryBackgroundColor #D5E8D4
skinparam controlBackgroundColor  #F8CECC
skinparam entityBackgroundColor   #DAE8FC

actor 事務職員 as A
boundary "メニュー画面" as B1
boundary "図書予約画面" as B2
boundary "予約完了画面" as B3
control "図書予約処理" as C1

entity "会員情報テーブル" as MemberDB
entity "図書情報テーブル" as BookDB
entity "予約情報テーブル" as ReserveDB

== 予約開始 ==
A -> B1: 予約メニューを押下()
activate B1
B1 -> B2: 図書予約画面を表示()
deactivate B1
activate B2

== 会員番号入力 ==
A -> B2: 会員番号を入力し確定()
B2 -> C1: 会員情報確認()
activate C1
C1 -> MemberDB: 会員番号で検索
activate MemberDB
MemberDB --> C1: 氏名・会員種別
deactivate MemberDB

alt 会員番号未入力 or 未登録
    C1 --> B2: 「会員番号を確認してください」と表示
end

C1 --> B2: 会員情報表示
deactivate C1

== 図書検索 ==
A -> B2: 書名を入力して検索()
B2 -> C1: 図書検索
activate C1

alt 書名未入力
    C1 --> B2: 「書名を入力してください」と表示
end

alt 該当図書なし
    C1 --> B2: 「該当する図書が見つかりません」と表示
end

C1 -> BookDB: 書名で図書検索
activate BookDB
BookDB --> C1: 図書一覧（書名・著者・出版社・管理番号・貸出状況）
deactivate BookDB
C1 --> B2: 図書一覧表示
deactivate C1

== 図書予約 ==
A -> B2: 予約対象図書を選択()
B2 -> C1: 予約情報登録
activate C1

alt 学生が雑誌予約
    C1 --> B2: 「学生は雑誌を予約できません」と表示
end

alt 未貸出の本がある
    C1 --> B2: 「在庫があります」と表示
end

C1 -> ReserveDB: 予約情報(ISBN, 会員番号, 予約日時)を保存
activate ReserveDB
ReserveDB --> C1: 保存完了
deactivate ReserveDB
C1 -> B3: 予約完了画面表示
deactivate C1
deactivate B2
activate B3

@enduml
